stages:
  - checks
  - build
  - package

variables:
  # Default values to override if needed
  NIX_OPTS: --extra-experimental-features nix-command --extra-experimental-features flakes --log-format raw
  # WARNING This assume that the pytest-cov package is available. If not installed you'll have this error:
  # pytest: error: unrecognized arguments: --cov ...
  TEST_EXTRA_ARGS: --cov ./ryax --cov-report xml:coverage.xml --cov-report term --cov-config=.coveragerc --cov-branch --junitxml=./report.xml
  LINT_CMD: ./lint.sh

check:
  tags:
    - shell
    - vm
  stage: checks
  rules:
    - if: $CI_COMMIT_TAG =~ /^$/
  image: python:3.10.11-slim-bullseye
  variables:
    POETRY_CACHE_DIR: .poetry
  cache:
    - key:
        files:
          - poetry.lock
        prefix: poetry
      paths:
        - .poetry
  script:
    - export  POETRY_CACHE_DIR=$PWD/$POETRY_CACHE_DIR
    - cachix watch-exec ryaxtech-ci -- nix run $NIX_OPTS .#lint -- $LINT_EXTRA_ARGS

test:
  tags:
    - shell
    - vm
  stage: checks
  retry: 1
  rules:
    - if: $CI_COMMIT_TAG =~ /^$/
  artifacts:
    when: always
    paths:
      - report.xml
    reports:
      junit: report.xml
      coverage_report:
        coverage_format: cobertura
        path: "./coverage.xml"
  variables:
    POETRY_CACHE_DIR: .poetry
  cache:
    - key:
        files:
          - poetry.lock
        prefix: poetry
      paths:
        - .poetry
  coverage: '/^TOTAL\s+\d+\s+\d+\s+\d+\s+\d+\s+(\d+\%)/'
  script:
    - export  POETRY_CACHE_DIR=$PWD/$POETRY_CACHE_DIR
    - cachix watch-exec ryaxtech-ci -- nix run $NIX_OPTS .#test -- $TEST_EXTRA_ARGS


package_and_push_image:
  stage: package
  retry: 2
  tags:
    - shell
    - vm
  variables:
    RYAX_TOOL: global-continuum-placement
    APP_VERSION: $CI_COMMIT_REF_SLUG
    REGISTRY_PATH: ryaxtech
    REGISTRY_CREDS: $DOCKERHUB_USER:$DOCKERHUB_PASS
    REGISTRY_USER: $DOCKERHUB_USER
    REGISTRY_PASS: $DOCKERHUB_PASS
  script:
    - set -e
    - cachix use ryaxtech-ci
    - |
      cachix watch-exec ryaxtech-ci -- bash -c "
      set -e
      set -x
      nix run $NIX_OPTS .\#install -- $INSTALL_ARGS
      
      echo Pushing $REGISTRY_PATH/$RYAX_TOOL:$APP_VERSION
      nix run $NIX_OPTS --impure .\#image.copyTo -- --dest-creds=\"$REGISTRY_CREDS\" docker://$REGISTRY_PATH/$RYAX_TOOL:$APP_VERSION
      
      # Replace with this to have aach64 image
      #echo Pushing $REGISTRY_PATH/$RYAX_TOOL-amd64:$APP_VERSION
      #nix run $NIX_OPTS --impure .\#image.copyTo -- --dest-creds=\"$REGISTRY_CREDS\" docker://$REGISTRY_PATH/$RYAX_TOOL-amd64:$APP_VERSION
      #nix run $NIX_OPTS --option system aarch64-linux --extra-platforms aarch64-linux --option sandbox false .\#install $INSTALL_ARGS
      #echo Pushing $REGISTRY_PATH/$RYAX_TOOL-arm64:$APP_VERSION
      #nix run $NIX_OPTS --impure --option system aarch64-linux --extra-platforms aarch64-linux --option sandbox false .\#image.copyTo -- --dest-creds=$REGISTRY_CREDS docker://$REGISTRY_PATH/$RYAX_TOOL-arm64:$APP_VERSION
      #nix run $NIX_OPTS 'github:NixOS/nixpkgs?rev=db24d86dd8a4769c50d6b7295e81aa280cd93f35#manifest-tool' --  --username $REGISTRY_USER --password $REGISTRY_PASS push from-args --platforms linux/amd64,linux/arm64 --template $REGISTRY_PATH/$RYAX_TOOL-ARCH:$APP_VERSION --target $REGISTRY_PATH/$RYAX_TOOL:$APP_VERSION"